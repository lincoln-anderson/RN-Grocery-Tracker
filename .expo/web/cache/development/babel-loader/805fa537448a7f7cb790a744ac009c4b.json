{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/lincolnanderson/Desktop/reactNative.nosync/RN-Grocery-Tracker/views/GroceryItemView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport styles from \"../../RN-Grocery-Tracker/styles/styles\";\n\nvar GroceryItem = function (_React$Component) {\n  _inherits(GroceryItem, _React$Component);\n\n  var _super = _createSuper(GroceryItem);\n\n  function GroceryItem() {\n    var _this;\n\n    _classCallCheck(this, GroceryItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: 'steak',\n      expDate: getCurrentDate(),\n      purchasedDate: getPurchasedDate()\n    };\n    return _this;\n  }\n\n  _createClass(GroceryItem, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, this.state.name), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, \"Purchased on: \", this.state.expDate, \" \"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, \"Expires on: \", this.state.expDate));\n    }\n  }]);\n\n  return GroceryItem;\n}(React.Component);\n\nvar getCurrentDate = function getCurrentDate() {\n  var date = new Date().getDate();\n  var month = new Date().getMonth() + 1;\n  var year = new Date().getFullYear();\n  console.log(date + '-' + month + '-' + year);\n  return date + '-' + month + '-' + year;\n};\n\nvar getPurchasedDate = function getPurchasedDate() {\n  var date = new Date().getDate();\n  var month = new Date().getMonth() + 1;\n  var year = new Date().getFullYear();\n  console.log(date - 8 + '-' + month + '-' + year);\n  return date - 8 + '-' + month + '-' + year;\n};\n\nexport default GroceryItem;","map":{"version":3,"sources":["/Users/lincolnanderson/Desktop/reactNative.nosync/RN-Grocery-Tracker/views/GroceryItemView.js"],"names":["StatusBar","React","NavigationContainer","createStackNavigator","styles","GroceryItem","state","name","expDate","getCurrentDate","purchasedDate","getPurchasedDate","Component","date","Date","getDate","month","getMonth","year","getFullYear","console","log"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,MAAP;;IAEMC,W;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,OADA;AAENC,MAAAA,OAAO,EAAEC,cAAc,EAFjB;AAGNC,MAAAA,aAAa,EAAEC,gBAAgB;AAHzB,K;;;;;;WAMR,kBAAS;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,KAAKL,KAAL,CAAWC,IAAnB,CADF,EAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsB,KAAKD,KAAL,CAAWE,OAAjC,MAHF,EAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoB,KAAKF,KAAL,CAAWE,OAA/B,CALF,CADF;AAYD;;;;EArBuBP,KAAK,CAACW,S;;AA0BhC,IAAMH,cAAc,GAAC,SAAfA,cAAe,GAAI;AAErB,MAAII,IAAI,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAX;AACA,MAAIC,KAAK,GAAG,IAAIF,IAAJ,GAAWG,QAAX,KAAwB,CAApC;AACA,MAAIC,IAAI,GAAG,IAAIJ,IAAJ,GAAWK,WAAX,EAAX;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,GAAG,GAAP,GAAaG,KAAb,GAAqB,GAArB,GAA2BE,IAAvC;AACA,SAAOL,IAAI,GAAG,GAAP,GAAaG,KAAb,GAAqB,GAArB,GAA2BE,IAAlC;AAGH,CAbD;;AAeA,IAAMP,gBAAgB,GAAC,SAAjBA,gBAAiB,GAAI;AAEvB,MAAIE,IAAI,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAX;AACA,MAAIC,KAAK,GAAG,IAAIF,IAAJ,GAAWG,QAAX,KAAwB,CAApC;AACA,MAAIC,IAAI,GAAG,IAAIJ,IAAJ,GAAWK,WAAX,EAAX;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAaR,IAAI,GAAG,CAAR,GAAa,GAAb,GAAmBG,KAAnB,GAA2B,GAA3B,GAAiCE,IAA7C;AACA,SAAQL,IAAI,GAAG,CAAR,GAAa,GAAb,GAAmBG,KAAnB,GAA2B,GAA3B,GAAiCE,IAAxC;AAGH,CAbD;;AAeA,eAAeb,WAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport styles from '../../RN-Grocery-Tracker/styles/styles'\n\nclass GroceryItem extends React.Component {\n\n  state = {\n    name: 'steak',\n    expDate: getCurrentDate(),\n    purchasedDate: getPurchasedDate()\n  }\n\n  render() {\n    return(\n      <View>\n        <Text>{ this.state.name }</Text>\n\n        <Text>Purchased on: { this.state.expDate } </Text>\n\n        <Text>Expires on: { this.state.expDate }</Text>\n\n\n\n      </View>\n    )\n  }\n}\n\n//for testing\n\nconst getCurrentDate=()=>{\n\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n    var year = new Date().getFullYear();\n\n    //Alert.alert(date + '-' + month + '-' + year);\n    // You can turn it in to your desired format\n\n    console.log(date + '-' + month + '-' + year)\n    return date + '-' + month + '-' + year;//format: dd-mm-yyyy;\n\n\n}\n\nconst getPurchasedDate=()=>{\n\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n    var year = new Date().getFullYear();\n\n    //Alert.alert(date + '-' + month + '-' + year);\n    // You can turn it in to your desired format\n\n    console.log((date - 8) + '-' + month + '-' + year)\n    return (date - 8) + '-' + month + '-' + year;//format: dd-mm-yyyy;\n\n\n}\n\nexport default GroceryItem;\n"]},"metadata":{},"sourceType":"module"}