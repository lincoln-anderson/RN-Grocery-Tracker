{"ast":null,"code":"var _jsxFileName = \"/Users/lincolnanderson/Desktop/reactNative.nosync/RN-Grocery-Tracker/screens/Loading.js\";\nimport React, { useEffect } from 'react';\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { AppLoading } from 'expo';\nimport SampleData from \"../data/sample\";\nexport default function LoadingScreen(props) {\n  useEffect(function () {\n    return checkLocalData();\n  }, []);\n\n  function checkLocalData() {\n    AsyncStorage.getItem('quotes', function (err, data) {\n      if (data === null) {\n        AsyncStorage.setItem('quotes', JSON.stringify(SampleData.quotes));\n        props.navigation.navigate('App');\n      } else {\n        props.navigation.navigate('App');\n      }\n    });\n  }\n\n  return React.createElement(AppLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  });\n}","map":{"version":3,"sources":["/Users/lincolnanderson/Desktop/reactNative.nosync/RN-Grocery-Tracker/screens/Loading.js"],"names":["React","useEffect","AsyncStorage","AppLoading","SampleData","LoadingScreen","props","checkLocalData","getItem","err","data","setItem","JSON","stringify","quotes","navigation","navigate"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;SACQC,Y;AACR,SAASC,UAAT,QAA2B,MAA3B;AAEA,OAAOC,UAAP;AAGA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAEzCL,EAAAA,SAAS,CAAC;AAAA,WAAMM,cAAc,EAApB;AAAA,GAAD,EAAyB,EAAzB,CAAT;;AAEA,WAASA,cAAT,GAAyB;AAErBL,IAAAA,YAAY,CAACM,OAAb,CAAqB,QAArB,EAA+B,UAACC,GAAD,EAAMC,IAAN,EAAe;AAE1C,UAAIA,IAAI,KAAK,IAAb,EAAkB;AACdR,QAAAA,YAAY,CAACS,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeT,UAAU,CAACU,MAA1B,CAA/B;AAEAR,QAAAA,KAAK,CAACS,UAAN,CAAiBC,QAAjB,CAA0B,KAA1B;AACH,OAJD,MAIK;AACDV,QAAAA,KAAK,CAACS,UAAN,CAAiBC,QAAjB,CAA0B,KAA1B;AACH;AACJ,KATD;AAUH;;AAED,SAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH","sourcesContent":["import React, {useEffect} from 'react';\nimport {AsyncStorage} from 'react-native';\nimport { AppLoading } from 'expo';\n\nimport SampleData from '../data/sample'\n\n//1 - LOADING SCREEN\nexport default function LoadingScreen(props) {\n\n    useEffect(() => checkLocalData(), []);\n\n    function checkLocalData(){\n        //Check if LocalStorage has been populated with the sample data\n        AsyncStorage.getItem('quotes', (err, data) => {\n            //if it doesn't exist, extract from json fil\n            if (data === null){\n                AsyncStorage.setItem('quotes', JSON.stringify(SampleData.quotes));//save the initial data in Async\n\n                props.navigation.navigate('App'); //Navigate to the home page\n            }else{\n                props.navigation.navigate('App'); //Navigate to the home page\n            }\n        });\n    }\n\n    return <AppLoading/>;\n}\n"]},"metadata":{},"sourceType":"module"}