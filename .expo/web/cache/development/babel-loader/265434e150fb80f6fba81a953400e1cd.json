{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lincolnanderson/Desktop/reactNative.nosync/RN-Grocery-Tracker/screens/Home.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport styles from \"../../RN-Grocery-Tracker/styles/styles\";\nimport GroceryItemView from \"../../RN-Grocery-Tracker/views/GroceryItemView\";\nexport default function HomeScreen(props) {\n  var dispatch = useDispatch();\n  var navigation = props.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFetching = _useState2[0],\n      setIsFetching = _useState2[1];\n\n  var dataReducer = useSelector(function (state) {\n    return state.dataReducer;\n  });\n  var quotes = dataReducer.quotes;\n  useEffect(function () {\n    return getData();\n  }, []);\n\n  var getData = function getData() {\n    setIsFetching(true);\n    AsyncStorage.getItem('quotes', function (err, quotes) {\n      if (err) alert(err.message);else if (quotes !== null) dispatch(addQuotes(JSON.parse(quotes)));\n      setIsFetching(false);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(GroceryItemView, {\n    name: \"steak\",\n    expDate: getCurrentDate(),\n    purchasedDate: getPurchasedDate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.spacer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(GroceryItemView, {\n    name: \"chicken\",\n    expDate: getCurrentDate(),\n    purchasedDate: getPurchasedDate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}\n;\n\nvar getPurchasedDate = function getPurchasedDate() {\n  var date = new Date().getDate();\n  var month = new Date().getMonth() + 1;\n  var year = new Date().getFullYear();\n  console.log(date + '-' + month + '-' + year);\n  return date + '-' + month + '-' + year;\n};\n\nvar getCurrentDate = function getCurrentDate() {\n  var date = new Date().getDate();\n  var month = new Date().getMonth() + 1;\n  var year = new Date().getFullYear();\n  console.log(date - 8 + '-' + month + '-' + year);\n  return date - 8 + '-' + month + '-' + year;\n};","map":{"version":3,"sources":["/Users/lincolnanderson/Desktop/reactNative.nosync/RN-Grocery-Tracker/screens/Home.js"],"names":["StatusBar","React","useEffect","useState","AsyncStorage","useDispatch","useSelector","NavigationContainer","createStackNavigator","styles","GroceryItemView","HomeScreen","props","dispatch","navigation","isFetching","setIsFetching","dataReducer","state","quotes","getData","getItem","err","alert","message","addQuotes","JSON","parse","container","getCurrentDate","getPurchasedDate","spacer","date","Date","getDate","month","getMonth","year","getFullYear","console","log"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useEffect, useState} from 'react';\nimport {\n    FlatList,\n    StyleSheet,\n    SafeAreaView,\n    View,\n    Text,\n    ActivityIndicator,\n    TouchableHighlight,\n    AsyncStorage\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport styles from '../../RN-Grocery-Tracker/styles/styles'\nimport GroceryItemView from '../../RN-Grocery-Tracker/views/GroceryItemView'\n\nexport default function HomeScreen(props) {\n    const dispatch = useDispatch();\n    const { navigation } = props;\n\n    const [isFetching, setIsFetching] = useState(false);\n\n\n    const dataReducer = useSelector((state) => state.dataReducer);\n    const { quotes } = dataReducer;\n\n    useEffect(() => getData(), []);\n\n    const getData = () => {\n        setIsFetching(true);\n\n        //OPTION 1 - LOCAL DATA\n        AsyncStorage.getItem('quotes', (err, quotes) => {\n            if (err) alert(err.message);\n            else if (quotes !== null) dispatch(addQuotes(JSON.parse(quotes)));\n\n            setIsFetching(false)\n        });\n\n    };\n\n    \n  return (\n    <View style={styles.container}>\n      <GroceryItemView name='steak' expDate={ getCurrentDate() } purchasedDate={ getPurchasedDate() } />\n      <View style={styles.spacer} />\n      <GroceryItemView name='chicken' expDate={ getCurrentDate() } purchasedDate={ getPurchasedDate() } />\n    </View>\n  );\n};\n\n\n//for testing\n\nconst getPurchasedDate=()=>{\n\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n    var year = new Date().getFullYear();\n\n    //Alert.alert(date + '-' + month + '-' + year);\n    // You can turn it in to your desired format\n\n    console.log(date + '-' + month + '-' + year)\n    return date + '-' + month + '-' + year;//format: dd-mm-yyyy;\n\n\n}\n\nconst getCurrentDate=()=>{\n\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n    var year = new Date().getFullYear();\n\n    //Alert.alert(date + '-' + month + '-' + year);\n    // You can turn it in to your desired format\n\n    console.log((date - 8) + '-' + month + '-' + year)\n    return (date - 8) + '-' + month + '-' + year;//format: dd-mm-yyyy;\n\n\n}\n"]},"metadata":{},"sourceType":"module"}